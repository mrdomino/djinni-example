// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from platform.djinni

package com.interaxon.example;

import java.util.ArrayList;

public abstract class Platform {
    /**
     * Act at some later time in the caller's thread. If until is 0, act will be
     * run as soon as possible but not until after the caller has returned (i.e.
     * defer_action will not block if act blocks.)
     */
    public abstract void deferAction(Action act, Duration until);

    /**
     * Runs act immediately in a new thread. Calls error() if something went
     * wrong setting up the thread.
     */
    public abstract void threadAction(Errorable act);

    /**
     * Run r at the specified interval. Runs as frequently at possible if the
     * interval is 0 (or is less than the time r takes to complete). Never runs
     * multiple times concurrently. Interval must be non-negative. If r cancels
     * the handle in do, r will not be called again.
     */
    public abstract IntervalHandle repeatAction(Action act, Duration atInterval);

    /**
     * List of Bluetooth devices accessible to the API right now.
     * On Android, this is all paired devices. On iOS, this is all connected
     * devices.
     */
    public abstract ArrayList<BluetoothDevice> allDevices();

    /**
     * Return a Bluetooth device if one is available at any time before timeout.
     * Returns a null reference if the timeout expired.
     */
    public abstract BluetoothDevice waitForDeviceUntil(Duration timeout);

    /**
     * Register a callback to be called any time a Bluetooth device becomes
     * available.
     */
    public abstract DeviceCallbackHandle addDeviceCallback(BluetoothDeviceCallback callback);

    /** Initiate a non-blocking connection to the specified Bluetooth device. */
    public abstract BluetoothConnectionHandle connectToDevice(BluetoothDevice device, BluetoothConnectionCallback callback);
}
