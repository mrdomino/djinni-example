// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from platform.djinni

#pragma once

#include "bluetooth_connection_handle.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class BluetoothConnectionHandle final : djinni::JniInterface<::interaxon::example::BluetoothConnectionHandle, BluetoothConnectionHandle> {
public:
    using CppType = std::shared_ptr<::interaxon::example::BluetoothConnectionHandle>;
    using JniType = jobject;

    static jobject toJava(JNIEnv* jniEnv, std::shared_ptr<::interaxon::example::BluetoothConnectionHandle> c) { return djinni::JniClass<::djinni_generated::BluetoothConnectionHandle>::get()._toJava(jniEnv, c); }
    static std::shared_ptr<::interaxon::example::BluetoothConnectionHandle> fromJava(JNIEnv* jniEnv, jobject j) { return djinni::JniClass<::djinni_generated::BluetoothConnectionHandle>::get()._fromJava(jniEnv, j); }

    const djinni::GlobalRef<jclass> clazz { djinni::jniFindClass("com/interaxon/example/BluetoothConnectionHandle") };
    const jmethodID method_write { djinni::jniGetMethodID(clazz.get(), "write", "([B)J") };
    const jmethodID method_close { djinni::jniGetMethodID(clazz.get(), "close", "()V") };

    class JavaProxy final : djinni::JavaProxyCacheEntry, public ::interaxon::example::BluetoothConnectionHandle {
    public:
        JavaProxy(jobject obj);
        virtual int64_t write(const std::vector<uint8_t> & bytes) override;
        virtual void close() override;

    private:
        using djinni::JavaProxyCacheEntry::getGlobalRef;
        friend class djinni::JniInterface<::interaxon::example::BluetoothConnectionHandle, ::djinni_generated::BluetoothConnectionHandle>;
        friend class djinni::JavaProxyCache<JavaProxy>;
    };

private:
    BluetoothConnectionHandle();
    friend class djinni::JniClass<::djinni_generated::BluetoothConnectionHandle>;
};

}  // namespace djinni_generated
