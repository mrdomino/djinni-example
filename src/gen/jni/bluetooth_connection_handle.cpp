// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from platform.djinni

#include "bluetooth_connection_handle.hpp"  // my header
#include "HBinary.hpp"
#include "HI64.hpp"

namespace djinni_generated {

BluetoothConnectionHandle::BluetoothConnectionHandle() : djinni::JniInterface<::interaxon::example::BluetoothConnectionHandle, BluetoothConnectionHandle>() {}

BluetoothConnectionHandle::JavaProxy::JavaProxy(jobject obj) : JavaProxyCacheEntry(obj) {}

int64_t BluetoothConnectionHandle::JavaProxy::JavaProxy::write(const std::vector<uint8_t> & c_bytes) {
    JNIEnv * const jniEnv = djinni::jniGetThreadEnv();
    djinni::JniLocalScope jscope(jniEnv, 10);
    djinni::LocalRef<jbyteArray> j_bytes(jniEnv, ::djinni::HBinary::toJava(jniEnv, c_bytes));
    const auto & data = djinni::JniClass<::djinni_generated::BluetoothConnectionHandle>::get();
    jlong jret = jniEnv->CallLongMethod(getGlobalRef(), data.method_write, j_bytes.get());
    djinni::jniExceptionCheck(jniEnv);
    return ::djinni::HI64::Unboxed::fromJava(jniEnv, jret);
};

void BluetoothConnectionHandle::JavaProxy::JavaProxy::close() {
    JNIEnv * const jniEnv = djinni::jniGetThreadEnv();
    djinni::JniLocalScope jscope(jniEnv, 10);
    const auto & data = djinni::JniClass<::djinni_generated::BluetoothConnectionHandle>::get();
    jniEnv->CallVoidMethod(getGlobalRef(), data.method_close);
    djinni::jniExceptionCheck(jniEnv);
};

}  // namespace djinni_generated
