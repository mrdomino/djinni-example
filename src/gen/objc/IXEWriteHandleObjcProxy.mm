// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from platform.djinni

#import "IXEWriteHandleObjcProxy+Private.h"
#import "IXEWriteHandle.h"

namespace dropboxsync
{
    WriteHandleObjcProxy::WriteHandleObjcProxy (id objcRef)
    {
        assert([[objcRef class] conformsToProtocol:@protocol(IXEWriteHandle)]);
        this->objcRef = objcRef;
    }

    WriteHandleObjcProxy::~WriteHandleObjcProxy ()
    {
        djinni::DbxObjcWrapperCache<WriteHandleObjcProxy> & cache = djinni::DbxObjcWrapperCache<WriteHandleObjcProxy>::getInstance();
        cache.remove(objcRef);
    }

    std::shared_ptr<::interaxon::example::WriteHandle> WriteHandleObjcProxy::write_handle_with_objc (id objcRef)
    {
        djinni::DbxObjcWrapperCache<WriteHandleObjcProxy> & cache = djinni::DbxObjcWrapperCache<WriteHandleObjcProxy>::getInstance();
        return static_cast<std::shared_ptr<::interaxon::example::WriteHandle>>(cache.get(objcRef));
    }

    int64_t WriteHandleObjcProxy::write (const std::vector<uint8_t> & bytes)
    {
        @autoreleasepool {
            NSData *cpp_bytes = [NSData dataWithBytes:(&bytes[0]) length:(bytes.size())];
            int64_t objcRet = [objcRef write:cpp_bytes];
            int64_t cppRet = objcRet;
            return cppRet;
        }
    }
}
