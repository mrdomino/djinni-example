// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from platform.djinni

#import "IXEDuration+Private.h"
#import <Foundation/Foundation.h>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@implementation IXEDuration

- (id)initWithDuration:(IXEDuration *)duration
{
    if (self = [super init]) {
        _microseconds = duration.microseconds;
    }
    return self;
}

- (id)initWithMicroseconds:(int64_t)microseconds
{
    if (self = [super init]) {
        _microseconds = microseconds;
    }
    return self;
}

- (id)initWithCppDuration:(const ::interaxon::example::Duration &)duration
{
    if (self = [super init]) {
        _microseconds = duration.microseconds;
    }
    return self;
}

- (::interaxon::example::Duration)cppDuration
{
    int64_t microseconds = _microseconds;
    return ::interaxon::example::Duration(
            std::move(microseconds));
}
- (BOOL)isEqual:(id)other
{
    if (![other isKindOfClass:[IXEDuration class]]) {
        return NO;
    }
    IXEDuration *typedOther = (IXEDuration *)other;
    return self.microseconds == typedOther.microseconds;
}
- (NSComparisonResult)compare:(IXEDuration *)other
{
    NSComparisonResult tempResult;
    if (self.microseconds < other.microseconds) {
        tempResult = NSOrderedAscending;
    } else if (self.microseconds > other.microseconds) {
        tempResult = NSOrderedDescending;
    } else {
        tempResult = NSOrderedSame;
    }
    if (tempResult != NSOrderedSame) {
        return tempResult;
    }
    return NSOrderedSame;
}

@end
