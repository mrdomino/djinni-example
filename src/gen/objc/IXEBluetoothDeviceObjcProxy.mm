// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from platform.djinni

#import "IXEBluetoothDeviceObjcProxy+Private.h"
#import "IXEBluetoothConnectionCallbackCppProxy+Private.h"
#import "IXEBluetoothConnectionHandleObjcProxy+Private.h"
#import "IXEBluetoothDevice.h"

namespace dropboxsync
{
    BluetoothDeviceObjcProxy::BluetoothDeviceObjcProxy (id objcRef)
    {
        assert([[objcRef class] conformsToProtocol:@protocol(IXEBluetoothDevice)]);
        this->objcRef = objcRef;
    }

    BluetoothDeviceObjcProxy::~BluetoothDeviceObjcProxy ()
    {
        djinni::DbxObjcWrapperCache<BluetoothDeviceObjcProxy> & cache = djinni::DbxObjcWrapperCache<BluetoothDeviceObjcProxy>::getInstance();
        cache.remove(objcRef);
    }

    std::shared_ptr<::interaxon::example::BluetoothDevice> BluetoothDeviceObjcProxy::bluetooth_device_with_objc (id objcRef)
    {
        djinni::DbxObjcWrapperCache<BluetoothDeviceObjcProxy> & cache = djinni::DbxObjcWrapperCache<BluetoothDeviceObjcProxy>::getInstance();
        return static_cast<std::shared_ptr<::interaxon::example::BluetoothDevice>>(cache.get(objcRef));
    }

    std::string BluetoothDeviceObjcProxy::name ()
    {
        @autoreleasepool {
            NSString *objcRet = [objcRef name];
            std::string cppRet([objcRet UTF8String], [objcRet lengthOfBytesUsingEncoding:NSUTF8StringEncoding]);
            return cppRet;
        }
    }

    std::string BluetoothDeviceObjcProxy::address ()
    {
        @autoreleasepool {
            NSString *objcRet = [objcRef address];
            std::string cppRet([objcRet UTF8String], [objcRet lengthOfBytesUsingEncoding:NSUTF8StringEncoding]);
            return cppRet;
        }
    }

    std::shared_ptr<BluetoothConnectionHandle> BluetoothDeviceObjcProxy::connect (const std::shared_ptr<::interaxon::example::BluetoothConnectionCallback> & callback)
    {
        @autoreleasepool {
            id <IXEBluetoothConnectionCallback> cpp_callback = [IXEBluetoothConnectionCallbackCppProxy bluetoothConnectionCallbackWithCpp:callback];
            id <IXEBluetoothConnectionHandle> objcRet = [objcRef connect:cpp_callback];
            std::shared_ptr<::interaxon::example::BluetoothConnectionHandle> cppRet = ::dropboxsync::BluetoothConnectionHandleObjcProxy::bluetooth_connection_handle_with_objc(objcRet);
            return cppRet;
        }
    }
}
